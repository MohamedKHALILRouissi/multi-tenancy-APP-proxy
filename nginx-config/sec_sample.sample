server {
  # DOMAINTAG= <$variable1>
  listen 443 ssl;
  listen [::]:443 ssl;
    server_name  <$variable1>.<$domain>;
  server_token off;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
  client_body_buffer_size 16K; # running webserver on 64bit OS
  client_max_body_size 8m; #allow for large file upload 
  access_log  /var/log/nginx/host.access.log  main; # logging 
  client_body_timeout 12s;   # reduce the surface of session flooding 
  client_header_timeout 12s;
  add_header X-Frame-Options SAMEORIGIN;
  add_header X-Content-Type-Options nosniff;
  add_header Content-Security-Policy "default-src 'self';";
  add_header X-Permitted-Cross-Domain-Policies master-only;
  add_header Referrer-Policy same-origin;
  add_header Strict-Transport-Security 'max-age=31536000;
             includeSubDomains; preload';

    # something will be added here to get your to the subdomain
    location \ {
	if ($limit_bots = 1) {
           return 403;
       	}
        limit_conn addr 10; # limit 10 connection per unique IP reduce scarping attack 
        proxy_pass   http://<$host>;
	      proxy_set_header  Host              $http_host;   # required for docker client's sake
        proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
        proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_read_timeout                  900;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_cache my_cache;
        proxy_cache_valid 200 302 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_revalidate on;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
    }
} 
